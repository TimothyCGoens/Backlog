{"version":3,"sources":["Components/BaseLayout.js","App.js","serviceWorker.js","store/reducer.js","utilities/authenticate.js","Components/LogIn.js","Components/Register.js","Components/Card.js","store/actions.js","Components/Profile.js","Components/BackLogPlate.js","Components/Backlog.js","Components/Plate.js","Components/Search.js","Components/requireAuth.js","index.js"],"names":["Menu","handleLogOutClick","localStorage","removeItem","_this","props","logout","history","push","react_default","a","createElement","className","this","isAuthenticated","react_router_dom","to","href","onClick","Component","BaseLayout","BaseLayout_Menu","onLogout","children","connect","state","dispatch","type","withRouter","App","Boolean","window","location","hostname","match","initialState","uid","gameSelected","selectedGame","developers","image","genres","platforms","publishers","backlog","reducer","arguments","length","undefined","action","Object","objectSpread","token","name","value","deck","releaseDate","original_release_date","moreDetails","site_detail_url","console","log","concat","card","setAuthenticationHeader","axios","defaults","headers","common","Login","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleTextChange","e","setState","defineProperty","target","handleLogInClick","post","username","password","then","response","data","userID","id","setItem","onAuthenticated","catch","err","onChange","placeholder","Register","handleRegisterClick","user","platform","genre","aboutme","email","aboutMe","Card","handleBacklogClick","dispatchToBacklog","handleWishlistClick","handleCurrentClick","map","game","key","src","medium_url","alt","userId","body","developer","publisher","releasedate","videos","gb","json","alert","actionCreators","Profile","users","_this2","Axios","get","BackLogPlate","clicked","release_date","Backlog","handlePlateSelected","selectedGameId","_this3","games","Components_BackLogPlate","guid","plate","Search","crossdomain","dispatchCard","results","handleSearchClick","title","activePage","pageNumber","Components_Plate","src_Components_Card","requireAuth","ComposedComponent","Authenticate","_Component","inherits","createClass","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","getItem","ReactDOM","render","es","src_Components_BaseLayout","react_router","path","exact","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dc86c4ad.chunk.js","sourcesContent":["import React, {Component} from 'react'\nimport {Link, NavLink} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport {withRouter} from 'react-router-dom'\nimport './BaseLayout.css' \n\nclass Menu extends Component {\n\n    handleLogOutClick = () => {\n        localStorage.removeItem('jsonwebtoken')\n        this.props.logout()\n        this.props.history.push('/login')\n    }\n    \n    render() {\n        return(\n            <div className='menu'>\n            <h1>Backlog</h1>\n            <div>\n            <ul className='menu-items'>\n                {!this.props.isAuthenticated ? <li><Link to='/register'><button>Register</button></Link></li> : null}\n                {!this.props.isAuthenticated ? <li><Link to='/login'><button>Log In</button></Link></li> : null}\n                <li><Link to='/profile/:userId'><button>Profile</button></Link></li>\n                <li><Link to='/search'><button>Search</button></Link></li>\n                <li><Link to='/backlog/:userId'><button>Backlog</button></Link></li>\n                {this.props.isAuthenticated ? <li><a href='#'><button onClick={this.handleLogOutClick}>Log Out</button></a></li> : null}\n            </ul>\n            </div>\n            </div>\n        )\n    }\n\n}\n\nclass BaseLayout extends Component {\n    render() {\n        return(\n            <div>\n                <Menu isAuthenticated={this.props.isAuthenticated} logout={this.props.onLogout} history={this.props.history}/>\n                {this.props.children}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isAuthenticated: state.isAuthenticated\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onLogout: () => dispatch({type: 'LOG_OUT'})\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(BaseLayout))","import React, {Component} from 'react';\nimport './App.css';\nimport {Menu} from './Components/BaseLayout'\nimport axios from 'axios'\n\n\n\n\nclass App extends Component {\n\n\n\n  render() {\n    return (\n      <div className=\"App\">\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import Axios from \"axios\";\n\nconst initialState = {\n    isAuthenticated: false,\n    uid: 0,\n    gameSelected: false,\n    selectedGame: {},\n    developers: [],\n    image: null,\n    genres: [],\n    platforms: [],\n    publishers: [],\n    backlog: [],\n\n}\nconst reducer = (state = initialState, action) => {\n    \n    switch(action.type) {\n        case 'ON_AUTHENTICATED' :\n            return {\n                ...state,\n                isAuthenticated: action.token != null ? true : false,\n                uid: action.uid\n            }\n        case 'LOG_OUT':\n        return {\n            ...state,\n            isAuthenticated: false\n        }\n        case 'CARD_LOADED':\n        return {\n            \n            ...state,\n            gameSelected: true,\n            name: action.value.name,\n            deck: action.value.deck,\n            selectedGame: action.value,\n            publishers: action.value.publishers,\n            developers: action.value.developers,\n            image: action.value.image,\n            genres: action.value.genres,\n            platforms: action.value.platforms,\n            releaseDate: action.value.original_release_date,\n            moreDetails: action.value.site_detail_url,\n        }\n        case 'ADD_TO_BACKLOG':\n        console.log(action)\n        return {\n            ...state,\n            backlog: state.backlog.concat(action.card)\n\n        }\n        \n        // .then(() => Axios.post)\n        default:\n        return state\n    }\n}\n\nexport default reducer","import axios from 'axios'\n\nexport function setAuthenticationHeader(token) {\n    if(token) {\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`\n    }else {\n        delete axios.defaults.headers.common['Authorization']\n    }\n}\nexport default setAuthenticationHeader","import React, {Component} from 'react'\nimport axios from 'axios'\nimport {setAuthenticationHeader} from '../utilities/authenticate'\nimport {connect} from 'react-redux'\nimport './LogIn.css'\n\nclass Login extends Component {\n\n    constructor() {\n        super()\n\n        this.state = {\n            username: '',\n            password: ''\n        }\n    }\n\n    handleTextChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handleLogInClick = () => {\n        \n        axios.post('http://localhost:8080/login',{\n            username: this.state.username,\n            password: this.state.password\n        }).then(response => {\n            let token = response.data.token\n            let userID = response.data.id \n            localStorage.setItem('jsonwebtoken', token)\n            this.props.onAuthenticated(token, userID)\n            setAuthenticationHeader(token)\n            this.props.history.push('/search')\n        }).catch(err => console.log(err))\n    }\n\n\n\n    render() {\n        return(\n            <div className='Login'>\n                <h1>Log In</h1>\n                <input className='inputs' onChange={this.handleTextChange} name='username' type='text' placeholder='username' />\n                <input className='inputs' onChange={this.handleTextChange} name='password' type='password' placeholder='password' />\n                <button onClick={this.handleLogInClick}>Log In</button>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onAuthenticated: (token, userID) => dispatch({type: 'ON_AUTHENTICATED', token: token, uid:userID})\n    }\n    \n}\n\nexport default connect(null, mapDispatchToProps)(Login)\n\n","import React, {Component} from 'react'\nimport axios from 'axios'\nimport {connect} from 'react-redux'\nimport './Register.css'\n\n\nclass Register extends Component {\n constructor() {\n     super()\n\n     this.state = {\n         username: '',\n         location: '',\n         platform: '',\n         genre: '',\n         aboutMe: '',\n         email: '',\n         password: ''\n     }\n }\n    handleTextChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handleRegisterClick = () => {\n        const user = {\n            username: this.state.username,\n            location: this.state.location,\n            platform: this.state.platform,\n            genre: this.state.genre,\n            aboutme: this.state.aboutme,\n            email: this.state.email,\n            password: this.state.password\n        }\n        axios.post('http://localhost:8080/register', user)\n            .then(response => {\n                console.log(response)\n        })\n        // console.log(\"clicked\")\n    }\n\n\n    render() {\n        return(\n            <div className='register'>\n            <h1>Register</h1>\n            <div className='register-inputs'>\n            <input className='inputs' onChange={this.handleTextChange} name='username' type='text' placeholder='username' />\n            <input className='inputs' onChange={this.handleTextChange} name='location' type='text' placeholder='location' />\n            <input className='inputs' onChange={this.handleTextChange} name='platform' type='text' placeholder='platform of choice' />\n            <input className='inputs' onChange={this.handleTextChange} name='genre' type='text' placeholder='favorite genre' />\n            <textarea className='text-area-input' onChange={this.handleTextChange} name='aboutme' placeholder='about me' />\n            <input className='inputs' onChange={this.handleTextChange} name='email' type='email' placeholder='email' />\n            <input className='inputs' onChange={this.handleTextChange} name='password' type='password' placeholder='password' />\n            </div>\n            <button onClick={this.handleRegisterClick}>Register</button>\n\n            </div>\n\n        )\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onAuthenticated: (token) => dispatch({type: 'ON_AUTHENTICATED', token: token})\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(Register)","import React, {Component} from 'react'\nimport axios from 'axios'\nimport './Card.css'\nimport { connect } from 'react-redux';\nimport {addGameToBacklog} from '../store/actions'\nimport * as actionCreators from '../store/actions'\n\nclass Card extends Component {\n\n    handleBacklogClick = () => {\n        this.props.dispatchToBacklog(this.props)\n    }\n\n    handleWishlistClick = () => {\n        console.log('clicked')\n    }\n    handleCurrentClick = () => {\n        console.log('clicked')\n    }\n\n    render() {\n\n        // let releaseDate = this.props.releaseDate;\n        // console.log(releaseDate)\n        // let dateStr = JSON.parse(release_date);\n        // console.log(dateStr);\n\n        // let date = new Date(dateStr)\n        // console.log(date)\n\n        let publishers = this.props.publishers.map((game) => {\n            return (\n                <p>{game.name}</p>\n            )\n        })\n     \n        let developers = this.props.developers.map((game) => {\n            return (\n                <p>{game.name}</p>\n            )\n        })\n        let genres = this.props.genres.map((game) => {\n            return (\n                <p>{game.name}</p>\n            )\n        })\n        let platforms = this.props.platforms.map((game) => {\n            return (\n                <p>{game.name}</p>\n            )\n        })\n\n        if (this.props.gameSelected === false) {\n            return (\n                <div></div>\n            )\n        }\n        else {\n            return (\n                <div key={this.props.card.id} className='entire-card'>\n                {/* {cards} */}\n                \n                <div className='card-title'>\n                    <p>{this.props.card.name}</p>\n                </div>\n                <div className='card-header'>\n                    <div className='image-spot'>\n                        {this.props.image ? <img src = {this.props.image.medium_url} alt = ''/> : null}\n                    </div>\n                    <div className='header-info'>\n                    <p className='bold'>Publisher(s)</p>\n                    <p className='header-styles'>{publishers}</p>\n                    <p className='bold'>Developer(s)</p>\n                    <p className='header-styles'>{developers}</p>\n                    <p className='bold'>Genre</p>\n                    <p className='header-styles'>{genres}</p>\n                    \n                \n                    </div>\n                    {/* <p>{this.props.card.original_release_date}</p> */}\n                </div>\n                <div className='deck'>\n                <div className='platform-spacing'>\n                <p className='bold'>Platform(s)</p>\n                <p className='platform-styles'>{platforms}</p>\n                </div>\n                    <p className='deck-style'>{this.props.card.deck}</p>\n                </div>\n                <div className='resources'>\n                    <p></p>\n                </div>\n                <ul className='card-buttons'>\n                    <li><button className='card-backlog-button' onClick={this.handleBacklogClick}>Add to Backlog</button></li>\n                </ul>\n                </div>\n            )\n        }\n        \n    }\n}\n\n\nconst mapStateToProps = (state) => {\n\n    return {\n        gameSelected: state.gameSelected,\n        name: state.name,\n        deck: state.deck,\n        card: state.selectedGame,\n        publishers: state.publishers,\n        image: state.image,\n        developers: state.developers,\n        genres: state.genres,\n        platforms: state.platforms,\n        releaseDate: state.releaseDate,\n        userId: state.uid\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return ({\n        dispatchToBacklog: (card) => {dispatch(actionCreators.addGameToBacklog(card)\n        )}\n    \n    })\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Card)","import axios from 'axios'\n\nexport const addGameToBacklog = (card) => {\n    \n\n    let body = {\n        name: card.name,\n        image: card.image.medium_url,\n        developer: card.developers,\n        publisher: card.publishers,\n        genre: card.genres,\n        deck: card.deck,\n        releasedate: card.card.original_release_date,\n        platforms: card.platforms,\n        videos: card.card.videos,\n        gb: card.card.site_detail_url,\n        userId: card.userId\n    }\n\n    console.log(body)\n    return (dispatch) => {\n        axios.post('http://localhost:8080/backlog', body)\n    // fetch('http://localhost:8080/backlog', {\n    //     method: 'POST',\n    //     headers: {\n    //         'Content-Type': 'applicatin/json',\n    //         'Accept': 'application/json'\n    //     },\n    //     body: body\n    // })\n    .then((json)  => {\n        console.log(json)\n        dispatch({type: 'ADD_TO_BACKLOG', card: body })\n        alert('Game added to backlog!')\n        })\n    }\n}\n","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport Card from './Card'\nimport './Profile.css'\nimport Axios from 'axios';\n\nclass Profile extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            users: []\n        }\n    }\n\n\n    componentDidMount() {\n        Axios.get(`http://localhost:8080/profile/${this.props.user}`)\n        .then(response => {\n            this.setState({users: response.data})\n            console.log(response.data)\n        })\n    }\n\n    render() {\n\n        return(\n            <div className='profile'>\n            <h1>Your Profile</h1>\n            <div className='profile-layout'>\n            <div className='currently-playing'>\n            {/* <Card /> */}\n            </div>\n            <div className='user-info'>\n            \n            <div className='profile-info'>\n            <p>Username</p>\n            <div className='info-name'>{this.state.users.username}</div>\n            </div>\n            <div className='profile-info'>\n            <p>Location</p>\n            <div className='info-name'>{this.state.users.location}</div>\n            </div>\n            <div className='profile-info'>\n            <p>Platform of choice</p>\n            <div className='info-name'>{this.state.users.platform}</div>\n            </div>\n            <div className='profile-info'>\n            <p>Favorite Genre</p>\n            <div className='info-name'>{this.state.users.genre}</div>\n            </div>\n            <div className='profile-info'>\n            <p>About Me</p>\n            <div className='info-name'>{this.state.users.aboutme}</div>\n            </div>\n            </div>\n            </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    console.log(state)\n    return {\n        user: state.uid\n    }\n}\n\nexport default connect(mapStateToProps)(Profile)","import React from 'react'\n\nimport './Plate.css'\nimport Axios from 'axios';\n\nconst BackLogPlate = (props) => (\n\n     \n    <div>\n        <div className='plate' onClick={props.clicked}>\n            <div className='plate-layout'>\n                <div className='image-spot'>\n                <img src={props.image} alt='box art'/>\n                </div>\n                    <div className='plate-body'>\n                        <p className='title'>{props.name}</p>\n                        {/* <p>hello</p> */}\n                        <p>{props.release_date}</p>\n                        {/* <button className='backlog-button'>Completed!</button> */}\n                    </div>\n            </div>\n        </div>\n    </div>\n)\n\n   \nexport default BackLogPlate","import React, {Component} from 'react'\nimport Axios from 'axios'\nimport BackLogPlate from './BackLogPlate'\nimport Card from './Card'\nimport './Backlog.css'\nimport { connect } from 'react-redux';\n\nclass Backlog extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            log: [],\n            selectedGameId: null,\n        }\n    }\n\n    componentDidMount() {\n        Axios.get(`http://localhost:8080/backlog/${this.props.user}`)\n        .then(response => {\n            this.setState({log: response.data})\n            console.log(response.data)\n        })\n    }\n\n    handlePlateSelected = (id) => {\n        Axios.get(`http://localhost:8080/backlog/${this.props.user}`)\n        .then(response => {\n            console.log(response.data)\n        })\n    }\n\n\n\n    render() {\n        if (this.props.gameSelected === false) {\n            return (\n                <div></div>\n            )\n        }\n\n        const games = this.state.log.map((game) => {\n            console.log(game)\n            return <BackLogPlate \n                    key={game.guid} \n                    name={game.name} \n                    image={game.image} \n                    release_date={game.original_release_date}\n                    clicked={() => this.handlePlateSelected(game.guid)}/>\n        })\n\n        return(\n            <div className='backlog'>\n            <h1>Welcome to your Backlog</h1>\n                <div className='backlog-layout'>\n                    <div className='backlog-highlight'>\n                        {/* <Card id={this.state.selectedGameId}/> */}\n                    </div>\n                <div className='backlog-results'>\n                    {games}\n                </div>\n            </div>\n        </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    console.log(state)\n    return {\n        user: state.uid\n    }\n}\n\nexport default connect(mapStateToProps)(Backlog)","import React from 'react'\n\nimport './Plate.css'\n\nconst plate = (props) => (\n\n     \n    <div>\n        <div className='plate' onClick={props.clicked}>\n            <div className='plate-layout'>\n            <div className='image-spot'>\n                <img src={props.image} alt='box art'/>\n                </div>\n                    <div className='plate-body'>\n                        <p className='title'>{props.name}</p>\n                        {/* <p>hello</p> */}\n                        <p>{props.release_date}</p>\n                    </div>\n            </div>\n        </div>\n    </div>\n)\n\n   \nexport default plate","import React, {Component} from 'react'\nimport Plate from './Plate'\nimport Card from './Card'\nimport axios from 'axios'\nimport Pagination from 'react-js-pagination'\nimport {connect} from 'react-redux'\nimport './Search.css'\n\nclass Search extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            activePage: 1,\n            selectedGameId: null,\n            games: [],\n            title: ''\n        }\n    }\n    handlePageChange(pageNumber) {\n        this.setState({activePage: pageNumber})\n    }\n\n    handleTextChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n    // clicking a plate will populate the sidebar with info\n    handlePlateSelected = (id) => {\n  \n    \n        axios.get(`${'https://cors-anywhere.herokuapp.com/'}https://www.giantbomb.com/api/game/${id}/?api_key=f194765e78f8558180a48f79cbb6b02fe6f9bca2&format=JSON`,{crossdomain:true})\n                .then(response => {\n                    this.props.dispatchCard(response.data.results)\n                    console.log(response.data.results.publishers)\n                })  \n    }\n\n\n    handleSearchClick = () => {\n\n    axios.get(`${'https://cors-anywhere.herokuapp.com/'}http://www.giantbomb.com/api/search/?api_key=f194765e78f8558180a48f79cbb6b02fe6f9bca2&format=json&query=\"${this.state.title}\"&resources=game`,{crossdomain:true})\n    .then(response => {\n      this.setState({games: response.data.results})\n    })\n}\n\n    render() {\n\n        const games = this.state.games.map((game) => {\n            return <Plate \n                    key={game.guid} \n                    name={game.name} \n                    image={game.image.medium_url} \n                    // release_date={game.original_release_date}\n                    clicked={() => this.handlePlateSelected(game.guid)}/>\n        })\n        \n      \n       \n        return(\n\n                <div className='search'>\n                <input className='inputs' onChange={this.handleTextChange} name='title' type='text' placeholder='Game Title' />\n                <button className='search-button' onClick={this.handleSearchClick}>Search</button>\n                    <div className='search-layout'>\n                        <div className='search-highlight'>\n                            <Card id={this.state.selectedGameId}/>\n                        </div>\n                        <div className='search-results'>\n                            {games}\n                            {/* <Pagination\n                                firstPageText={<i className='glyphicon glyphicon-chevron-left'/>}\n                                lastPageText={<i className='glyphicon glyphicon-chevron-right'/>}\n                                prevPageText={<i className='glyphicon glyphicon-menu-left'/>}\n                                nextPageText={<i className='glyphicon glyphicon-menu-right'/>}\n                                activePage={this.state.activePage}\n                                itemsCountPerPage={10}\n                                totalItemsCount={50}\n                                onChange={this.handlePageChange}\n                                /> */}\n                        </div>\n                    </div>\n            </div>\n        )\n    }\n}\n\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return ({\n        dispatchCard: (game) => {dispatch({type: 'CARD_LOADED', value: game})\n    }\n    })\n    \n}\n\n\n\nexport default connect(null, mapDispatchToProps)(Search)","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\n\nexport default function(ComposedComponent) {\n    class Authenticate extends Component {\n\n        constructor(props) {\n            super(props) \n\n            if(!this.props.isAuthenticated) {\n                this.props.history.push('/login')\n            }\n        }\n        render() {\n            return (\n                <ComposedComponent {...this.props} />\n            )\n        }\n    }\n\n        const mapStateToProps = (state) => {\n            return {\n                isAuthenticated: state.isAuthenticated\n            }\n        }\n\n    return connect(mapStateToProps)(Authenticate)\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport BaseLayout from './Components/BaseLayout';\nimport { createStore, compose, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport reducer from './store/reducer.js'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport setAuthenticationHeader from './utilities/authenticate'\nimport Login from './Components/LogIn'\nimport Register from './Components/Register'\nimport Profile from './Components/Profile'\nimport Backlog from './Components/Backlog'\nimport Search from './Components/Search'\nimport thunk from 'redux-thunk';\nimport requireAuth from './Components/requireAuth'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)))\n\nsetAuthenticationHeader(localStorage.getItem('jsonwebtoken'))\n\nReactDOM.render(\n<Provider store={store}>\n    <BrowserRouter>\n        <BaseLayout>\n            <Switch>\n\n                <Route path='/' exact component={App} />\n                <Route path='/register' exact component={Register} />\n                <Route path='/login' exact component={Login} />\n                <Route path='/profile/:userId' exact component={requireAuth(Profile)} />\n                <Route path='/search' exact component={Search} />\n                <Route path='/backlog/:userId' exact component={requireAuth(Backlog)} />\n\n\n            </Switch>\n        </BaseLayout>\n    </BrowserRouter>\n</Provider>\n\n\n\n\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}